__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 3}

rv.GROUND_EDGES = {0: [2, 6, 25, 3, 9, 11, 13, 24], 1: [7, 9, 25, 5, 8, 22], 2: [7, 20, 0, 10, 16], 3: [0, 12, 14, 16, 19], 4: [6, 7, 13, 15, 22, 18], 5: [1, 11, 25, 12], 6: [15, 0, 4, 9], 7: [4, 22, 1, 2], 8: [1, 15, 18, 23, 200], 9: [0, 6, 12, 21, 25, 1, 23], 10: [2, 17, 18, 21, 23], 11: [0, 18, 5, 200], 12: [3, 5, 15, 9, 200], 13: [0, 4, 16, 18], 14: [3, 15], 15: [14, 4, 6, 8, 12], 16: [2, 3, 13, 19, 21], 17: [10, 25], 18: [4, 8, 10, 13, 22, 11], 19: [3, 22, 24, 16], 20: [2, 25], 21: [10, 16, 9], 22: [1, 4, 7, 18, 19], 23: [8, 9, 10], 24: [0, 19], 25: [0, 1, 5, 9, 17, 20], 200: [8, 11, 12]}
rv.GROUND_WEIGHTS = {(0, 2): 4.194382033443027, (0, 6): 6.7103040252995, (0, 25): 6.014805370657402, (0, 3): 8.749605632137348, (0, 9): 4.910744560554738, (0, 11): 5.257725950290923, (0, 13): 1.4110727960240617, (0, 24): 10.427602882531787, (1, 7): 4.584996466978335, (1, 9): 4.3860466945933005, (1, 25): 10.207745836516633, (1, 5): 11.6793938356271, (1, 8): 6.679259203282974, (1, 22): 5.8649162278782185, (2, 7): 8.330693306640832, (2, 20): 10.100717182157464, (2, 10): 11.313672547054656, (2, 16): 8.166472402862535, (3, 12): 13.454154680128003, (3, 14): 3.8105237154901435, (3, 16): 8.100515388156897, (3, 19): 9.56899970140339, (4, 6): 1, (4, 7): 6.088488803736099, (4, 13): 5.931391061500538, (4, 15): 5.555357180288356, (4, 22): 9.34520265725806, (4, 18): 13.078509288429403, (5, 11): 3.6142498647491443, (5, 25): 4.885311880444954, (5, 12): 10.027870011437432, (6, 15): 2.23285172225326, (6, 9): 6.84939130673118, (7, 22): 1.6146823852738743, (8, 15): 10.344159026523872, (8, 18): 10.989984280592347, (8, 23): 4.0999114738466425, (8, 200): 6.974695918688882, (9, 12): 10.498206623410187, (9, 21): 15.235339403628775, (9, 25): 8.66551264490364, (9, 23): 15.870423770872726, (10, 17): 6.806834071055462, (10, 18): 8.065672974716046, (10, 21): 2.9082278587610455, (10, 23): 9.682748909712588, (11, 18): 11.116436042180213, (11, 200): 14.169093612782369, (12, 15): 5.425336890288292, (12, 200): 9.42092749137754, (13, 16): 5.325747916635837, (13, 18): 12.41842865357365, (14, 15): 11.24381653045213, (16, 19): 3.6906877423538935, (16, 21): 9.385936814520337, (17, 25): 4.513556893719207, (18, 22): 4.7344327059178335, (19, 22): 9.199623250015042, (19, 24): 5.9671086768852994, (20, 25): 4.059641917423061}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 7.951923666686706, 'r1': 7.7121851932347525, 'r2': 12.7815549052819, 'r3': 8.33062573644547}
rv.MACHINES = { 'm0': rv.FACTORY1,  'm1': rv.FACTORY1, }
rv.REPAIR_BOT = ['fixer0', 'fixer1', 'fixer2']

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19']
rv.OBJ_WEIGHT = {'o0': 9.607841763097877, 'o1': 7.550694926470663, 'o2': 8.470044475435314, 'o3': 8.195554475601526, 'o4': 4.926080439012319, 'o5': 10.200608015604065, 'o6': 4.271703450316316, 'o7': 8.12462443881421, 'o8': 10.253728742480373, 'o9': 4.555714572568405, 'o10': 5.609382423327318, 'o11': 6.333363908837757, 'o12': 6.0219050971723025, 'o13': 7.510209287541701, 'o14': 9.752236023504398, 'o15': 7.121163533159196, 'o16': 6.758190422947076, 'o17': 6.327086340443418, 'o18': 7.440316909329352, 'o19': 7.187828946040324}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3', 'o4'], 'type1': ['o5', 'o6', 'o7'], 'type2': ['o8', 'o9', 'o10', 'o11', 'o12', 'o13'], 'type3': ['o14', 'o15', 'o16', 'o17', 'o18', 'o19']}

def ResetState():
    state.loc = { 'r0': 13, 'r1': 15, 'r2': 0, 'r3': 5, 'm0': 10, 'm1': 2, 'fixer0': 24, 'fixer1': 8, 'fixer2': 15, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK,}
    state.storedLoc = {'o0': 3, 'o1': 20, 'o2': 2, 'o3': 16, 'o4': 3, 'o5': 5, 'o6': 16, 'o7': 2, 'o8': 18, 'o9': 18, 'o10': 15, 'o11': 19, 'o12': 23, 'o13': 7, 'o14': 24, 'o15': 0, 'o16': 11, 'o17': 23, 'o18': 6, 'o19': 20}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'fixer0': False, 'fixer1': False, 'fixer2': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'm0': False, 'm1': False, 'fixer0': False, 'fixer1': False, 'fixer2': False}
    state.numUses = {'m0': 7, 'm1': 11}
    state.var1 = {'temp': 'r1', 'temp1': 'r1'}

tasks = {
    6: [['order', 'type1', 200]],
    24: [['order', 'type1', 200]],
    12: [['order', 'type1', 200]],
    18: [['order', 'type2', 200]],
    14: [['order', 'type2', 200]],
    5: [['order', 'type2', 200]],
    7: [['order', 'type2', 200]],
    27: [['order', 'type2', 200]],
    21: [['order', 'type2', 200]],
    9: [['order', 'type3', 200]],
    3: [['order', 'type3', 200]],
    28: [['order', 'type3', 200]],
    23: [['order', 'type3', 200]],
    20: [['order', 'type3', 200]],
    11: [['order', 'type3', 200]],
}
eventsEnv = {
}