__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 4.639097221262311}

rv.GROUND_EDGES = {0: [3, 5, 6, 22, 4, 7, 12, 15], 1: [16, 10], 2: [22, 13, 14], 3: [0, 4, 18, 16], 4: [0, 13, 21, 3, 10, 22], 5: [11, 0, 18], 6: [10, 12, 22, 0, 8], 7: [0, 9], 8: [6, 13, 19, 10, 20], 9: [7, 15, 16, 17, 18, 200], 10: [1, 4, 8, 15, 6, 16, 17, 22], 11: [14, 19, 5], 12: [0, 6, 18, 20], 13: [2, 15, 17, 21, 4, 8], 14: [2, 11], 15: [0, 9, 10, 13, 19, 20], 16: [3, 10, 18, 19, 1, 9, 20], 17: [10, 9, 13], 18: [5, 9, 12, 16, 3, 21], 19: [15, 8, 11, 16], 20: [8, 12, 15, 16], 21: [13, 18, 4, 22], 22: [4, 10, 21, 0, 2, 6], 200: [9]}
rv.GROUND_WEIGHTS = {(0, 3): 9.584437573698464, (0, 5): 11.81771016916122, (0, 6): 4.050091930426227, (0, 22): 9.287182557539143, (0, 4): 8.745622774716809, (0, 7): 9.435666246965553, (0, 12): 1.997732881958978, (0, 15): 12.82086298397057, (1, 16): 3.8162925511462236, (1, 10): 7.461489748093876, (2, 22): 1, (2, 13): 3.254696391586987, (2, 14): 10.497888965510963, (3, 4): 7.025349568787011, (3, 18): 10.291760237766631, (3, 16): 17.855471147597427, (4, 13): 6.5789272895405, (4, 21): 16.746020584174147, (4, 10): 15.590416073471847, (4, 22): 11.246426453273441, (5, 11): 7.1804636690556904, (5, 18): 3.4166513967631262, (6, 10): 4.5835528229665865, (6, 12): 14.413991129388439, (6, 22): 9.155177806807743, (6, 8): 2.686766975596232, (7, 9): 3.5789127653171295, (8, 13): 1, (8, 19): 15.879678210130322, (8, 10): 9.446781688877314, (8, 20): 11.03776436308623, (9, 15): 6.877176295209041, (9, 16): 10.856466251579768, (9, 17): 4.100068163568434, (9, 18): 7.930370204495015, (9, 200): 12.05585403077075, (10, 15): 4.286275805365415, (10, 16): 13.471476722795407, (10, 17): 7.977673901373237, (10, 22): 8.991938952522512, (11, 14): 8.710823133016701, (11, 19): 5.794906840697074, (12, 18): 9.064302339840133, (12, 20): 6.364284998549588, (13, 15): 7.191769172025527, (13, 17): 3.0649720894036783, (13, 21): 16.328172831870045, (15, 19): 12.71294639205405, (15, 20): 12.48508685151996, (16, 18): 10.14222690271867, (16, 19): 7.7870123390932084, (16, 20): 3.8512908596308266, (18, 21): 7.558383593293979, (21, 22): 10.778120310937545}

rv.ROBOTS = ['r0', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11', 'r12']
rv.ROBOT_CAPACITY = {'r0': 9.64660386920222, 'r1': 6.825588469633323, 'r2': 6.522492929395571, 'r3': 10.153388749996042, 'r4': 6.638073779231237, 'r5': 4.632981984558364, 'r6': 8.032934890022029, 'r7': 9.352729237399844, 'r8': 11.125920501754344, 'r9': 7.19879494133072, 'r10': 8.487379449902761, 'r11': 7.133492086713538, 'r12': 7.124967586117404}
rv.MACHINES = ['m0', 'm1', 'fixer0', 'fixer1']
rv.REPAIR_BOT = []

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17']
rv.OBJ_WEIGHT = {'o0': 6.531809209585684, 'o1': 6.653109133897026, 'o2': 4.598803795478716, 'o3': 7.9446382704964265, 'o4': 4.57089937647688, 'o5': 7.601548540616102, 'o6': 8.348224294304751, 'o7': 7.656633242333069, 'o8': 9.318812006565619, 'o9': 9.060445536775276, 'o10': 8.507103063894508, 'o11': 10.03271502898795, 'o12': 10.027135127050038, 'o13': 7.249805144848096, 'o14': 6.92558264794101, 'o15': 6.760264120993878, 'o16': 8.341354258891112, 'o17': 6.981406433761909}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2'], 'type1': ['o3', 'o4', 'o5', 'o6', 'o7'], 'type2': ['o8', 'o9', 'o10', 'o11', 'o12', 'o13'], 'type3': ['o14', 'o15', 'o16', 'o17']}

def ResetState():
    state.loc = { 'r0': 10, 'r1': 14, 'r2': 7, 'r3': 8, 'r4': 11, 'r5': 8, 'r6': 2, 'r7': 0, 'r8': 7, 'r9': 19, 'r10': 17, 'r11': 15, 'r12': 10, 'm0': 10, 'm1': 16, 'fixer0': 0, 'fixer1': 8, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK,}
    state.storedLoc = {'o0': 21, 'o1': 3, 'o2': 14, 'o3': 22, 'o4': 17, 'o5': 18, 'o6': 12, 'o7': 2, 'o8': 7, 'o9': 5, 'o10': 22, 'o11': 1, 'o12': 21, 'o13': 4, 'o14': 7, 'o15': 22, 'o16': 19, 'o17': 1}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL,}
    state.busy = {"'r0'": False, "'r1'": False, "'r2'": False, "'r3'": False, "'r4'": False, "'r5'": False, "'r6'": False, "'r7'": False, "'r8'": False, "'r9'": False, "'r10'": False, "'r11'": False, "'r12'": False, "'m0'": False, "'m1'": False, "'fixer0'": False, "'fixer1'": False}
    state.numUses = {'m0': 6, 'm1': 7, 'fixer0': 13, 'fixer1': 12}
    state.var1 = {'temp': 'r1', 'temp1': 'r1'}

tasks = {
    28: [['order', 'type0', 200]],
    6: [['order', 'type0', 200]],
    15: [['order', 'type0', 200]],
    22: [['order', 'type1', 200]],
    18: [['order', 'type1', 200]],
    4: [['order', 'type1', 200]],
    33: [['order', 'type1', 200]],
    35: [['order', 'type1', 200]],
    8: [['order', 'type2', 200]],
    30: [['order', 'type2', 200]],
    25: [['order', 'type2', 200]],
    13: [['order', 'type2', 200]],
    23: [['order', 'type2', 200]],
    32: [['order', 'type2', 200]],
    29: [['order', 'type3', 200]],
    34: [['order', 'type3', 200]],
    14: [['order', 'type3', 200]],
    20: [['order', 'type3', 200]],
}
eventsEnv = {
}