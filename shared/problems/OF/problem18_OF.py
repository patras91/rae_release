__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 21.573990746053283}

rv.GROUND_EDGES = {0: [4, 1, 3, 6, 12, 14, 15, 18, 21, 22], 1: [0, 16, 13, 17], 2: [6, 13, 20], 3: [0, 19, 21], 4: [8, 0, 9], 5: [6, 20], 6: [0, 2, 5, 9, 11], 7: [10, 18], 8: [9, 20, 4], 9: [4, 6, 11, 17, 18, 8], 10: [7, 11, 12, 18, 22, 23, 17], 11: [6, 16, 9, 10], 12: [0, 10, 23], 13: [1, 16, 2], 14: [0], 15: [0, 19, 16], 16: [1, 15, 11, 13, 17, 19], 17: [1, 10, 16, 22, 9], 18: [0, 7, 9, 10, 200], 19: [3, 16, 15], 20: [2, 5, 23, 8, 200], 21: [0, 3], 22: [0, 10, 17, 23], 23: [12, 20, 22, 10], 200: [18, 20]}
rv.GROUND_WEIGHTS = {(0, 4): 16.317927708695144, (0, 1): 2.889709571470692, (0, 3): 1, (0, 6): 3.944023952183956, (0, 12): 8.07101109023686, (0, 14): 1, (0, 15): 8.896447569622934, (0, 18): 13.820954137903724, (0, 21): 13.469433314104187, (0, 22): 14.257820485460021, (1, 16): 4.852048455345781, (1, 13): 8.87674020644443, (1, 17): 10.29418657190085, (2, 6): 3.334083276600797, (2, 13): 3.189546488010288, (2, 20): 3.0621102725217106, (3, 19): 13.73937141556629, (3, 21): 8.521397632450078, (4, 8): 9.903943856548139, (4, 9): 9.56809419203493, (5, 6): 4.405697604469582, (5, 20): 12.24156425952008, (6, 9): 8.148859055043294, (6, 11): 3.0126693900703305, (7, 10): 6.958090820524201, (7, 18): 1.7680669786640708, (8, 9): 7.295157238017602, (8, 20): 7.528037477781537, (9, 11): 8.21015585176084, (9, 17): 13.400555165288019, (9, 18): 13.386085746893846, (10, 11): 9.317335111205088, (10, 12): 9.405801602036288, (10, 18): 6.988684785566385, (10, 22): 7.014941609022623, (10, 23): 7.25067467388151, (10, 17): 11.885514268517696, (11, 16): 3.851504642030135, (12, 23): 7.100053621063195, (13, 16): 8.034375463530623, (15, 19): 10.133350050766794, (15, 16): 5.018890343454058, (16, 17): 6.332846168764613, (16, 19): 5.470876404621279, (17, 22): 9.207650177569958, (18, 200): 2.1260379443703927, (20, 23): 7.909369932862279, (20, 200): 12.855211159402497, (22, 23): 4.739666130225025}

rv.ROBOTS = ['r0', 'r1', 'r2', 'r3', 'r4', 'r5', 'r6', 'r7', 'r8', 'r9', 'r10', 'r11']
rv.ROBOT_CAPACITY = {'r0': 11.740270252878169, 'r1': 7.434561184318066, 'r2': 10.510064141241644, 'r3': 6.129293403191099, 'r4': 5.6575857992459095, 'r5': 7.997436554881236, 'r6': 7.319533028072863, 'r7': 4.954248985985814, 'r8': 7.781352668970335, 'r9': 9.231292086824382, 'r10': 9.268819044661502, 'r11': 9.676705443186165}
rv.MACHINES = ['m0', 'fixer0']
rv.REPAIR_BOT = []

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21']
rv.OBJ_WEIGHT = {'o0': 7.2275726420840245, 'o1': 6.071069604799172, 'o2': 7.143641723630598, 'o3': 10.106868889482836, 'o4': 8.542248680065127, 'o5': 6.4282113147851785, 'o6': 6.705332882944069, 'o7': 5.824560860537755, 'o8': 5.309840631602087, 'o9': 5.984312669564667, 'o10': 6.013052308838645, 'o11': 8.237893181008403, 'o12': 5.771702851453637, 'o13': 6.770637853459544, 'o14': 9.081028233525352, 'o15': 8.758281735203111, 'o16': 6.727267868943358, 'o17': 9.023890494353079, 'o18': 8.175354209087137, 'o19': 11.740270252878169, 'o20': 7.161435215275183, 'o21': 10.183714971279915}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3'], 'type1': ['o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13'], 'type2': ['o14', 'o15', 'o16', 'o17', 'o18', 'o19'], 'type3': ['o20', 'o21']}

def ResetState():
  state.loc = { r0: 12, r1: 11, r2: 13, r3: 0, r4: 18, r5: 22, r6: 19, r7: 3, r8: 9, r9: 9, r10: 0, r11: 1, m0: 12, fixer0: 3, o0: UNK, o1: UNK, o2: UNK, o3: UNK, o4: UNK, o5: UNK, o6: UNK, o7: UNK, o8: UNK, o9: UNK, o10: UNK, o11: UNK, o12: UNK, o13: UNK, o14: UNK, o15: UNK, o16: UNK, o17: UNK, o18: UNK, o19: UNK, o20: UNK, o21: UNK,}
    state.storedLoc{'o0': 22, 'o1': 3, 'o2': 16, 'o3': 23, 'o4': 5, 'o5': 1, 'o6': 16, 'o7': 8, 'o8': 14, 'o9': 11, 'o10': 3, 'o11': 8, 'o12': 10, 'o13': 21, 'o14': 16, 'o15': 6, 'o16': 17, 'o17': 22, 'o18': 3, 'o19': 4, 'o20': 8, 'o21': 15}
  state.load = { o0: NIL, o1: NIL, o2: NIL, o3: NIL, o4: NIL, o5: NIL, o6: NIL, o7: NIL, o8: NIL, o9: NIL, o10: NIL, o11: NIL, o12: NIL, o13: NIL, o14: NIL, o15: NIL, o16: NIL, o17: NIL, o18: NIL, o19: NIL, o20: NIL, o21: NIL,}
    state.busy{'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'm0': False, 'fixer0': False}
    state.numUses9
    state.var1 = {'temp': 'r1', 'temp1': 'r1'}

tasks = {
    3: [['order', type0, 200]],
    7: [['order', type0, 200]],
    6: [['order', type0, 200]],
    1: [['order', type0, 200]],
    1: [['order', type2, 200]],
    7: [['order', type2, 200]],
    3: [['order', type2, 200]],
    8: [['order', type2, 200]],
    7: [['order', type2, 200]],
    1: [['order', type2, 200]],
    4: [['order', type3, 200]],
    5: [['order', type3, 200]],
}
eventsEnv = {
}