__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(id, r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(id, item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(id, m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(id, r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 19}

rv.GROUND_EDGES = {0: [1, 3, 4, 10, 9, 11, 15, 24, 200], 1: [3, 0, 4], 2: [18, 17, 19], 3: [15, 18, 0, 1, 9, 13], 4: [1, 7, 8, 18, 0, 5, 13], 5: [4, 14, 13], 6: [15, 8, 18, 200], 7: [13, 23, 4], 8: [6, 11, 14, 4], 9: [0, 3, 10, 23, 14], 10: [22, 24, 0, 9], 11: [0, 20, 8], 12: [14, 21], 13: [3, 4, 5, 7, 21, 23], 14: [9, 17, 5, 8, 12], 15: [0, 3, 6, 22], 16: [23], 17: [2, 14], 18: [6, 19, 24, 2, 3, 4, 200], 19: [2, 200, 18], 20: [24, 11], 21: [13, 12, 22, 200], 22: [15, 21, 10, 200], 23: [13, 7, 9, 16], 24: [0, 10, 18, 20], 200: [0, 6, 18, 21, 22, 19]}
rv.GROUND_WEIGHTS = {(0, 1): 9.673373074904593, (0, 3): 4.021692050814036, (0, 4): 12.183543732248804, (0, 10): 7.7892018926865045, (0, 9): 8.424263619353079, (0, 11): 1, (0, 15): 7.219316406336818, (0, 24): 4.717024454964041, (0, 200): 8.155031525039663, (1, 3): 6.81546509857815, (1, 4): 10.524267936034352, (2, 18): 3.0465079791818974, (2, 17): 10.507829634558407, (2, 19): 2.846262206296836, (3, 15): 9.6846662172981, (3, 18): 7.75535020238364, (3, 9): 9.137450785820773, (3, 13): 6.978272003729952, (4, 7): 1, (4, 8): 7.331528520281794, (4, 18): 8.987272129034276, (4, 5): 7.032697784447701, (4, 13): 11.658862588610289, (5, 14): 1, (5, 13): 8.326044430390821, (6, 15): 13.390867820745385, (6, 8): 2.9107295439565775, (6, 18): 12.111396702073773, (6, 200): 10.891697565308545, (7, 13): 12.363479722308675, (7, 23): 4.266960771381364, (8, 11): 11.546169185833103, (8, 14): 3.6759081178761734, (9, 10): 1.6173124572338438, (9, 23): 3.4811873848016788, (9, 14): 15.239575447756808, (10, 22): 12.03936723019757, (10, 24): 16.096242695344714, (11, 20): 1.4766387215120522, (12, 14): 4.098340849775447, (12, 21): 6.790285779721041, (13, 21): 6.603845350579906, (13, 23): 11.077772175819863, (14, 17): 1, (15, 22): 9.482319996374454, (16, 23): 11.184146257614191, (18, 19): 2.6855416537025745, (18, 24): 5.972415828587909, (18, 200): 13.482235729848519, (19, 200): 10.147782145920074, (20, 24): 6.090275111290925, (21, 22): 8.015053304275487, (21, 200): 7.8570235386506555, (22, 200): 8.61836115295351}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1,  'r7': rv.FACTORY1,  'r8': rv.FACTORY1,  'r9': rv.FACTORY1,  'r10': rv.FACTORY1,  'r11': rv.FACTORY1,  'r12': rv.FACTORY1,  'r13': rv.FACTORY1,  'r14': rv.FACTORY1,  'r15': rv.FACTORY1,  'r16': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 4.851494296243098, 'r1': 8.893584742240726, 'r2': 7.6713724815245605, 'r3': 9.289850990463718, 'r4': 9.818276158506508, 'r5': 6.66169910445425, 'r6': 9.659827865838908, 'r7': 8.32461212085167, 'r8': 7.591165307087765, 'r9': 6.541602077255116, 'r10': 5.479610966739717, 'r11': 6.120186046726651, 'r12': 10.156965297612844, 'r13': 9.667378088190443, 'r14': 4.9800351197917525, 'r15': 7.977350901987024, 'r16': 10.504091644590828}
rv.MACHINES = { 'm0': rv.FACTORY1,  'm1': rv.FACTORY1,  'm2': rv.FACTORY1,  'm3': rv.FACTORY1,  'm4': rv.FACTORY1,  'm5': rv.FACTORY1,  'm6': rv.FACTORY1,  'm7': rv.FACTORY1,  'm8': rv.FACTORY1,  'm9': rv.FACTORY1,  'm10': rv.FACTORY1, }
rv.REPAIR_BOT = { 'fixer0': rv.FACTORY1,  'fixer1': rv.FACTORY1, }

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21', 'o22', 'o23', 'o24', 'o25', 'o26', 'o27', 'o28', 'o29']
rv.OBJ_WEIGHT = {'o0': 4.93564010413559, 'o1': 5.193907476266376, 'o2': 9.10278709936246, 'o3': 6.346500820255709, 'o4': 6.813989619180277, 'o5': 8.571599894932481, 'o6': 7.440429083346311, 'o7': 4.931169206028698, 'o8': 4.079118824738105, 'o9': 5.373886763519549, 'o10': 10.000123441649167, 'o11': 6.711885429182009, 'o12': 6.019184333352914, 'o13': 7.198236791478874, 'o14': 7.016697785578386, 'o15': 5.943987888467259, 'o16': 6.968324595694886, 'o17': 5.419969982451222, 'o18': 7.865951311376247, 'o19': 6.776071236342446, 'o20': 7.287099263862379, 'o21': 5.887405711578044, 'o22': 8.597253387612719, 'o23': 7.337885947304601, 'o24': 6.803855412493678, 'o25': 5.154470514518515, 'o26': 2.852910420752477, 'o27': 7.895412834545805, 'o28': 9.011755049255452, 'o29': 6.361509137182316}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3'], 'type1': ['o4', 'o5', 'o6'], 'type2': ['o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14'], 'type3': ['o15', 'o16', 'o17', 'o18'], 'type4': ['o19', 'o20', 'o21', 'o22', 'o23', 'o24', 'o25', 'o26'], 'type5': ['o27', 'o28', 'o29']}

def ResetState():
    state.loc = { 'r0': 19, 'r1': 6, 'r2': 9, 'r3': 12, 'r4': 22, 'r5': 7, 'r6': 21, 'r7': 9, 'r8': 11, 'r9': 3, 'r10': 17, 'r11': 11, 'r12': 0, 'r13': 17, 'r14': 9, 'r15': 22, 'r16': 1, 'm0': 12, 'm1': 24, 'm2': 23, 'm3': 14, 'm4': 15, 'm5': 8, 'm6': 6, 'm7': 10, 'm8': 7, 'm9': 15, 'm10': 22, 'fixer0': 18, 'fixer1': 6, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK, 'o20': UNK, 'o21': UNK, 'o22': UNK, 'o23': UNK, 'o24': UNK, 'o25': UNK, 'o26': UNK, 'o27': UNK, 'o28': UNK, 'o29': UNK,}
    state.storedLoc = {'o0': 18, 'o1': 14, 'o2': 19, 'o3': 1, 'o4': 7, 'o5': 18, 'o6': 8, 'o7': 23, 'o8': 21, 'o9': 23, 'o10': 21, 'o11': 4, 'o12': 21, 'o13': 15, 'o14': 0, 'o15': 14, 'o16': 23, 'o17': 12, 'o18': 0, 'o19': 13, 'o20': 4, 'o21': 10, 'o22': 19, 'o23': 2, 'o24': 16, 'o25': 8, 'o26': 12, 'o27': 16, 'o28': 23, 'o29': 8}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL, 'r13': NIL, 'r14': NIL, 'r15': NIL, 'r16': NIL, 'fixer0': False, 'fixer1': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'r12': False, 'r13': False, 'r14': False, 'r15': False, 'r16': False, 'm0': False, 'm1': False, 'm2': False, 'm3': False, 'm4': False, 'm5': False, 'm6': False, 'm7': False, 'm8': False, 'm9': False, 'm10': False, 'fixer0': False, 'fixer1': False}
    state.numUses = {'m0': 12, 'm1': 12, 'm2': 10, 'm3': 13, 'm4': 15, 'm5': 13, 'm6': 13, 'm7': 12, 'm8': 8, 'm9': 7, 'm10': 7}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'redoId': 0}
    state.shouldRedo = {}

tasks = {
    3: [['order', 'type0', 200]],
    16: [['order', 'type0', 200]],
}
eventsEnv = {
}