__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 22}

rv.GROUND_EDGES = {0: [14, 28, 1, 5, 7, 8, 22, 26], 1: [0, 2, 22, 29, 30], 2: [1, 14, 27, 21, 30], 3: [6, 14], 4: [13, 21, 25, 29, 200], 5: [0, 18, 19, 20], 6: [28, 30, 3, 14], 7: [0], 8: [0], 9: [12, 18, 11, 17, 19], 10: [19, 25, 28, 27], 11: [9, 28, 21], 12: [17, 30, 9, 27, 29], 13: [4, 25], 14: [3, 6, 0, 2], 15: [29, 17, 18, 24, 200], 16: [27, 20], 17: [9, 15, 12], 18: [15, 19, 5, 9, 25, 30], 19: [9, 28, 5, 10, 18, 20, 23, 27, 30], 20: [16, 19, 5], 21: [2, 11, 23, 4], 22: [0, 1], 23: [19, 24, 21], 24: [15, 23], 25: [13, 18, 4, 10], 26: [0], 27: [2, 10, 12, 19, 16, 30], 28: [0, 6, 10, 11, 19], 29: [1, 4, 12, 15], 30: [1, 2, 18, 19, 27, 6, 12], 200: [4, 15]}
rv.GROUND_WEIGHTS = {(0, 14): 7.079424688541385, (0, 28): 1, (0, 1): 8.169464182447971, (0, 5): 1.8779882236873924, (0, 7): 6.4711211356718215, (0, 8): 7.981183014622678, (0, 22): 5.187706363069447, (0, 26): 7.521699564622982, (1, 2): 5.625685357600187, (1, 22): 9.493920691546915, (1, 29): 7.623410009600236, (1, 30): 11.342671940995215, (2, 14): 5.329950626512803, (2, 27): 5.4960392518099415, (2, 21): 6.5612695151428575, (2, 30): 10.35965976602593, (3, 6): 14.006732812011784, (3, 14): 11.740820994846533, (4, 13): 7.717505174818209, (4, 21): 7.969919417909841, (4, 25): 7.5356406547249595, (4, 29): 3.864866213970317, (4, 200): 1, (5, 18): 10.441089321240609, (5, 19): 12.910148238268132, (5, 20): 5.2546140184486685, (6, 28): 5.8470418421985, (6, 30): 10.168163874126856, (6, 14): 10.843879794975054, (9, 12): 6.995012637374197, (9, 18): 7.361713622336699, (9, 11): 11.420430467353665, (9, 17): 6.334369901573854, (9, 19): 1.5045908322861967, (10, 19): 8.950464775199725, (10, 25): 9.201196445905678, (10, 28): 11.927704996790453, (10, 27): 7.217530317186833, (11, 28): 6.411014250433948, (11, 21): 6.066154660693987, (12, 17): 3.6135191146157215, (12, 30): 11.208731982013976, (12, 27): 5.4467461728327295, (12, 29): 10.870062431784858, (13, 25): 4.696777393411849, (15, 29): 9.006743695137702, (15, 17): 8.10043791630392, (15, 18): 10.654428960943036, (15, 24): 12.737125930090457, (15, 200): 6.785803546844257, (16, 27): 5.187875965257797, (16, 20): 14.681989457539729, (18, 19): 6.97920432223537, (18, 25): 5.491043858878748, (18, 30): 3.9169032166766806, (19, 28): 8.074706268781522, (19, 20): 2.576415960893862, (19, 23): 9.037712624843769, (19, 27): 2.116046479554755, (19, 30): 6.060464210397284, (21, 23): 19.33284044939755, (23, 24): 5.797519580235454, (27, 30): 6.1028257839409825}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1,  'r7': rv.FACTORY1,  'r8': rv.FACTORY1,  'r9': rv.FACTORY1,  'r10': rv.FACTORY1,  'r11': rv.FACTORY1,  'r12': rv.FACTORY1,  'r13': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 9.722070626243765, 'r1': 8.309110503863907, 'r2': 8.029485905603647, 'r3': 9.381749243487187, 'r4': 8.353264878426186, 'r5': 8.552453908508037, 'r6': 7.2269939787360755, 'r7': 10.42068319782388, 'r8': 7.320308818718969, 'r9': 3.676196144545349, 'r10': 10.501065181133004, 'r11': 7.7874474192721586, 'r12': 7.77969290273509, 'r13': 8.459407836305946}
rv.MACHINES = { 'm0': rv.FACTORY1,  'm1': rv.FACTORY1, }
rv.REPAIR_BOT = ['fixer0', 'fixer1']

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12']
rv.OBJ_WEIGHT = {'o0': 9.107363155834454, 'o1': 6.031639957825176, 'o2': 6.329767787303486, 'o3': 5.48263167884627, 'o4': 8.734213049279505, 'o5': 6.813701914920877, 'o6': 5.236143816625582, 'o7': 7.648257122277414, 'o8': 6.765569297507206, 'o9': 4.022355427877672, 'o10': 10.501065181133004, 'o11': 5.878756641128618, 'o12': 7.06120181111237}
rv.OBJ_CLASS = {'type0': ['o0', 'o1'], 'type1': ['o2', 'o3', 'o4', 'o5', 'o6', 'o7'], 'type2': ['o8', 'o9', 'o10', 'o11', 'o12']}

def ResetState():
    state.loc = { 'r0': 8, 'r1': 8, 'r2': 23, 'r3': 19, 'r4': 0, 'r5': 29, 'r6': 17, 'r7': 20, 'r8': 20, 'r9': 7, 'r10': 4, 'r11': 7, 'r12': 13, 'r13': 3, 'm0': 16, 'm1': 2, 'fixer0': 14, 'fixer1': 7, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK,}
    state.storedLoc = {'o0': 6, 'o1': 29, 'o2': 7, 'o3': 2, 'o4': 13, 'o5': 25, 'o6': 22, 'o7': 29, 'o8': 19, 'o9': 5, 'o10': 3, 'o11': 17, 'o12': 9}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL, 'r13': NIL, 'fixer0': False, 'fixer1': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'r12': False, 'r13': False, 'm0': False, 'm1': False, 'fixer0': False, 'fixer1': False}
    state.numUses = {'m0': 7, 'm1': 11}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'shouldRedo': False}

tasks = {
    5: [['order', 'type0', 200]],
    1: [['order', 'type0', 200]],
}
eventsEnv = {
}