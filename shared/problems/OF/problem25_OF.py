__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(id, r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(id, item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(id, m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(id, r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 0}

rv.GROUND_EDGES = {0: [6, 9, 12, 17, 21, 22], 1: [2, 3, 17, 9, 20, 23], 2: [23, 1, 4, 22], 3: [9, 14, 16, 1, 23, 200], 4: [2, 7], 5: [22, 7, 15, 19], 6: [21, 0, 8, 16, 18], 7: [4, 5, 10, 19, 9, 13, 22, 23], 8: [6, 11, 10], 9: [0, 1, 7, 10, 20, 21, 3, 16, 18], 10: [8, 7, 9, 15], 11: [8, 18, 21, 14, 15], 12: [0, 22], 13: [7, 15, 18, 22], 14: [11, 17, 3], 15: [5, 10, 11, 13], 16: [6, 9, 3], 17: [0, 18, 1, 14], 18: [6, 9, 11, 13, 17], 19: [5, 7], 20: [1, 23, 9, 22], 21: [0, 6, 9, 11, 22], 22: [0, 2, 7, 12, 20, 21, 23, 5, 13, 200], 23: [1, 3, 7, 2, 20, 22], 200: [3, 22]}
rv.GROUND_WEIGHTS = {(0, 6): 8.798064413055615, (0, 9): 10.386137544645203, (0, 12): 4.738993635692846, (0, 17): 9.152362757812389, (0, 21): 6.4015625820941295, (0, 22): 3.410483451865927, (1, 2): 8.51080513903016, (1, 3): 10.956661898486136, (1, 17): 4.0341745722387525, (1, 9): 11.980024776217812, (1, 20): 14.560035304590208, (1, 23): 5.383559859901629, (2, 23): 3.7044051339016404, (2, 4): 13.8405791417117, (2, 22): 3.9775322631244254, (3, 9): 7.191669407482685, (3, 14): 17.786401535719335, (3, 16): 5.507231683997345, (3, 23): 13.230486705657743, (3, 200): 10.545058185566388, (4, 7): 6.237389073388043, (5, 22): 6.511151500564754, (5, 7): 10.718622534106736, (5, 15): 11.58504068551853, (5, 19): 7.636104830866936, (6, 21): 10.992357978216, (6, 8): 6.43695895389814, (6, 16): 10.38977091547946, (6, 18): 1, (7, 10): 11.52234062957973, (7, 19): 2.420768746009764, (7, 9): 6.328344988269915, (7, 13): 6.778746342184748, (7, 22): 10.998785635855224, (7, 23): 6.3986114070979125, (8, 11): 8.029071163683524, (8, 10): 5.5025157283613915, (9, 10): 8.852136683427966, (9, 20): 8.683315111392814, (9, 21): 7.173913928882575, (9, 16): 5.65556283945466, (9, 18): 5.29538574825574, (10, 15): 6.656223094982937, (11, 18): 9.07818208820913, (11, 21): 1, (11, 14): 5.50300569391663, (11, 15): 2.981930090396374, (12, 22): 12.031656610840042, (13, 15): 2.8755047450609803, (13, 18): 2.8381527882394586, (13, 22): 15.903017472339481, (14, 17): 4.730550890919274, (17, 18): 9.121207288640003, (20, 23): 8.763502127624937, (20, 22): 12.083270156165003, (21, 22): 7.219398839309399, (22, 23): 3.152040465512604, (22, 200): 4.362257330315013}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1,  'r7': rv.FACTORY1,  'r8': rv.FACTORY1,  'r9': rv.FACTORY1,  'r10': rv.FACTORY1,  'r11': rv.FACTORY1,  'r12': rv.FACTORY1,  'r13': rv.FACTORY1,  'r14': rv.FACTORY1,  'r15': rv.FACTORY1,  'r16': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 8.293298448445912, 'r1': 6.549411935802573, 'r2': 8.345121288439461, 'r3': 8.105962754947823, 'r4': 9.627160011241733, 'r5': 5.460434085833317, 'r6': 9.221478979055075, 'r7': 10.11004102745193, 'r8': 7.904255262685751, 'r9': 10.37807623926059, 'r10': 9.264897380889868, 'r11': 4.367939893375221, 'r12': 9.212834079744406, 'r13': 5.448797480689612, 'r14': 8.644655465083263, 'r15': 10.177197236131336, 'r16': 5.427758039070041}
rv.MACHINES = { 'm0': rv.FACTORY1,  'm1': rv.FACTORY1,  'm2': rv.FACTORY1,  'm3': rv.FACTORY1, }
rv.REPAIR_BOT = { 'fixer0': rv.FACTORY1,  'fixer1': rv.FACTORY1,  'fixer2': rv.FACTORY1, }

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21', 'o22', 'o23', 'o24', 'o25', 'o26']
rv.OBJ_WEIGHT = {'o0': 6.062267801179734, 'o1': 7.476158301900721, 'o2': 6.245524200238216, 'o3': 7.673048180851858, 'o4': 7.326055371451741, 'o5': 9.346966618241595, 'o6': 7.688973501769535, 'o7': 6.473910468721887, 'o8': 5.1861995276127, 'o9': 6.718508124315853, 'o10': 7.520205244006276, 'o11': 7.9300401401692096, 'o12': 6.715575259482141, 'o13': 6.645795170613184, 'o14': 2.7507973877004437, 'o15': 5.864767892973138, 'o16': 9.594415764034997, 'o17': 6.768859938745459, 'o18': 5.040648896398569, 'o19': 8.511056636776537, 'o20': 8.262208903903156, 'o21': 5.166629467519283, 'o22': 5.911202969970951, 'o23': 6.8928040500327645, 'o24': 6.628067831358711, 'o25': 3.3327483087167833, 'o26': 4.610911869394291}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3'], 'type1': ['o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11'], 'type2': ['o12', 'o13', 'o14', 'o15', 'o16'], 'type3': ['o17', 'o18', 'o19', 'o20'], 'type4': ['o21', 'o22', 'o23', 'o24', 'o25', 'o26']}

def ResetState():
    state.loc = { 'r0': 17, 'r1': 22, 'r2': 2, 'r3': 21, 'r4': 14, 'r5': 18, 'r6': 21, 'r7': 4, 'r8': 0, 'r9': 9, 'r10': 12, 'r11': 2, 'r12': 18, 'r13': 20, 'r14': 1, 'r15': 20, 'r16': 4, 'm0': 2, 'm1': 11, 'm2': 22, 'm3': 11, 'fixer0': 12, 'fixer1': 5, 'fixer2': 2, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK, 'o20': UNK, 'o21': UNK, 'o22': UNK, 'o23': UNK, 'o24': UNK, 'o25': UNK, 'o26': UNK,}
    state.storedLoc = {'o0': 14, 'o1': 18, 'o2': 19, 'o3': 5, 'o4': 6, 'o5': 13, 'o6': 3, 'o7': 16, 'o8': 18, 'o9': 19, 'o10': 11, 'o11': 0, 'o12': 23, 'o13': 10, 'o14': 18, 'o15': 10, 'o16': 0, 'o17': 2, 'o18': 3, 'o19': 19, 'o20': 18, 'o21': 23, 'o22': 0, 'o23': 15, 'o24': 9, 'o25': 19, 'o26': 10}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL, 'r13': NIL, 'r14': NIL, 'r15': NIL, 'r16': NIL, 'fixer0': False, 'fixer1': False, 'fixer2': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'r12': False, 'r13': False, 'r14': False, 'r15': False, 'r16': False, 'm0': False, 'm1': False, 'm2': False, 'm3': False, 'fixer0': False, 'fixer1': False, 'fixer2': False}
    state.numUses = {'m0': 12, 'm1': 9, 'm2': 14, 'm3': 4}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'redoId': 0}
    state.shouldRedo = {}

tasks = {
    17: [['order', 'type0', 200]],
    22: [['order', 'type0', 200]],
}
eventsEnv = {
}