__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 0}

rv.GROUND_EDGES = {0: [4, 7, 8, 9, 1, 5, 6, 12, 20], 1: [0, 2, 17], 2: [1, 6, 10, 12, 20, 24], 3: [22, 17], 4: [7, 14, 15, 0, 9], 5: [0, 10, 22, 16, 18, 19, 23], 6: [0, 2, 23, 200], 7: [14, 0, 4, 11], 8: [0, 22, 16], 9: [4, 12, 0], 10: [20, 2, 5, 23], 11: [7, 19, 200], 12: [0, 2, 9, 19, 24], 13: [18, 17], 14: [21, 4, 7, 17, 19], 15: [16, 4, 21], 16: [5, 8, 18, 15], 17: [1, 3, 13, 14, 21], 18: [5, 13, 16], 19: [5, 11, 12, 14], 20: [0, 2, 10, 24], 21: [15, 17, 14, 22], 22: [21, 3, 5, 8], 23: [5, 6, 10, 24], 24: [2, 12, 20, 23], 200: [6, 11]}
rv.GROUND_WEIGHTS = {(0, 4): 11.832844171010468, (0, 7): 1.9445452130146714, (0, 8): 12.983742173283716, (0, 9): 7.35927362447298, (0, 1): 1, (0, 5): 8.570953783694872, (0, 6): 3.895611594422772, (0, 12): 11.963137850283323, (0, 20): 4.110717944125431, (1, 2): 11.655865988832526, (1, 17): 8.652655097070376, (2, 6): 1, (2, 10): 1, (2, 12): 9.566034557577693, (2, 20): 5.988766094070041, (2, 24): 10.346480977388303, (3, 22): 10.918979226375017, (3, 17): 10.300332178137129, (4, 7): 1, (4, 14): 12.010520143090629, (4, 15): 9.562150095131969, (4, 9): 10.767586084737387, (5, 10): 2.8683030816969968, (5, 22): 2.0404577071138466, (5, 16): 9.88651875089709, (5, 18): 4.187081363559042, (5, 19): 14.133109424763322, (5, 23): 3.7828978672304707, (6, 23): 12.232335007493983, (6, 200): 7.976315144668038, (7, 14): 9.709019000021984, (7, 11): 11.973113543144086, (8, 22): 9.49591705160992, (8, 16): 9.403653227328316, (9, 12): 7.307335706894158, (10, 20): 6.1734429940586475, (10, 23): 5.992835488343715, (11, 19): 8.796526251222796, (11, 200): 13.438246385857216, (12, 19): 8.221784357039079, (12, 24): 1, (13, 18): 3.1675657808134483, (13, 17): 4.083574787172867, (14, 21): 6.255305965703148, (14, 17): 8.247844104677633, (14, 19): 10.596135767828025, (15, 16): 4.533016518668427, (15, 21): 4.970677952232807, (16, 18): 10.209518803215428, (17, 21): 8.961470744020854, (20, 24): 8.871310868151621, (21, 22): 9.028565311068764, (23, 24): 9.373573955543426}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 9.760088916383758, 'r1': 5.1028772049508255, 'r2': 10.37987921648948, 'r3': 7.680606694487093}
rv.MACHINES = { 'm0': rv.FACTORY1, }
rv.REPAIR_BOT = ['fixer0', 'fixer1']

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17']
rv.OBJ_WEIGHT = {'o0': 6.953794916736531, 'o1': 8.720392401031361, 'o2': 8.188802608118037, 'o3': 8.69033554787422, 'o4': 6.140320157047795, 'o5': 6.214975305917669, 'o6': 7.653084021996075, 'o7': 8.357604773949202, 'o8': 8.554960755910033, 'o9': 8.494877503258035, 'o10': 8.627623822463848, 'o11': 4.028706564491474, 'o12': 4.055060617322811, 'o13': 6.311773094502131, 'o14': 8.321809952324829, 'o15': 8.39131817515914, 'o16': 5.709802756751043, 'o17': 8.818892030433583}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3', 'o4', 'o5'], 'type1': ['o6', 'o7'], 'type2': ['o8', 'o9', 'o10', 'o11', 'o12'], 'type3': ['o13', 'o14', 'o15', 'o16', 'o17']}

def ResetState():
    state.loc = { 'r0': 13, 'r1': 19, 'r2': 11, 'r3': 11, 'm0': 10, 'fixer0': 6, 'fixer1': 22, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK,}
    state.storedLoc = {'o0': 1, 'o1': 11, 'o2': 20, 'o3': 16, 'o4': 20, 'o5': 2, 'o6': 2, 'o7': 11, 'o8': 18, 'o9': 7, 'o10': 4, 'o11': 13, 'o12': 17, 'o13': 10, 'o14': 21, 'o15': 6, 'o16': 10, 'o17': 19}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'fixer0': False, 'fixer1': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'm0': False, 'fixer0': False, 'fixer1': False}
    state.numUses = {'m0': 10}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'shouldRedo': False}

tasks = {
    14: [['order', 'type0', 200]],
    3: [['order', 'type0', 200]],
}
eventsEnv = {
}