__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 26.797035365542456}

rv.GROUND_EDGES = {0: [19, 2, 6, 8, 23, 24, 200], 1: [5, 6, 4], 2: [0, 10, 22, 28], 3: [14, 13, 16, 25, 27], 4: [1, 5, 16, 14, 18], 5: [25, 1, 4], 6: [0, 1, 14, 17], 7: [15, 12], 8: [0], 9: [26, 12, 28], 10: [2], 11: [21, 15, 22], 12: [7, 9, 22], 13: [3, 16, 26, 22], 14: [4, 6, 3], 15: [11, 21, 7, 22, 27], 16: [3, 23, 4, 13, 26], 17: [6, 26, 27, 28], 18: [4, 24, 25], 19: [0], 20: [24], 21: [25, 11, 15], 22: [2, 11, 13, 15, 12, 27], 23: [0, 16], 24: [0, 18, 20], 25: [3, 5, 18, 21], 26: [16, 17, 9, 13], 27: [3, 15, 17, 22], 28: [2, 9, 17], 200: [0]}
rv.GROUND_WEIGHTS = {(0, 19): 7.199341496855162, (0, 2): 6.485750348646635, (0, 6): 10.34588575642287, (0, 8): 6.428198439302776, (0, 23): 6.258415929500624, (0, 24): 5.77368949546775, (0, 200): 3.4242731889708056, (1, 5): 7.8936831974464905, (1, 6): 9.841458809517178, (1, 4): 6.268907124399087, (2, 10): 7.089435602581883, (2, 22): 7.436664058395457, (2, 28): 5.394662192106445, (3, 14): 8.825888024770697, (3, 13): 6.203312841068527, (3, 16): 11.202817192870674, (3, 25): 4.481409356225862, (3, 27): 1, (4, 5): 11.727141064549416, (4, 16): 7.4604933444407635, (4, 14): 7.421746793164705, (4, 18): 4.638120470363795, (5, 25): 4.468371441047687, (6, 14): 8.445972827138494, (6, 17): 12.68295333537693, (7, 15): 8.096901197397724, (7, 12): 8.821162469243799, (9, 26): 9.416942728501503, (9, 12): 4.570396179426799, (9, 28): 10.269877573410064, (11, 21): 6.752486835569069, (11, 15): 16.826732389437478, (11, 22): 2.127640701209825, (12, 22): 13.155358019895893, (13, 16): 10.075310173586606, (13, 26): 10.125545818743777, (13, 22): 2.664198713290479, (15, 21): 5.869016026053034, (15, 22): 12.947195144794982, (15, 27): 8.887970645296285, (16, 23): 10.643029764792576, (16, 26): 1, (17, 26): 8.615839564681378, (17, 27): 10.779974098819874, (17, 28): 5.612297517925463, (18, 24): 4.211596008824307, (18, 25): 1, (20, 24): 14.790048686061478, (21, 25): 17.36223206082601, (22, 27): 3.936429062311955}

rv.ROBOTS = ['r0', 'r1', 'r2', 'r3']
rv.ROBOT_CAPACITY = {'r0': 8.317102520113803, 'r1': 9.5118053330448, 'r2': 6.075795157292091, 'r3': 8.23501269121022}
rv.MACHINES = ['m0', 'fixer0']
rv.REPAIR_BOT = []

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21', 'o22', 'o23', 'o24', 'o25', 'o26']
rv.OBJ_WEIGHT = {'o0': 6.379839991367673, 'o1': 9.12327876232995, 'o2': 6.865552679164357, 'o3': 9.5118053330448, 'o4': 5.45574429898879, 'o5': 7.295546195865023, 'o6': 9.5118053330448, 'o7': 7.260045885658823, 'o8': 7.886424654512688, 'o9': 9.5118053330448, 'o10': 6.862932310954776, 'o11': 7.485004991187787, 'o12': 9.5118053330448, 'o13': 8.118631900003239, 'o14': 6.352558968026741, 'o15': 5.828415993003439, 'o16': 6.95798448052024, 'o17': 7.864071003709577, 'o18': 8.373312240635482, 'o19': 8.06843955425585, 'o20': 6.509514743752329, 'o21': 9.5118053330448, 'o22': 7.023567101595161, 'o23': 8.78835737301212, 'o24': 9.191713448719511, 'o25': 4.426733195279042, 'o26': 5.191542136280657}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2'], 'type1': ['o3', 'o4', 'o5', 'o6', 'o7'], 'type2': ['o8', 'o9', 'o10', 'o11', 'o12'], 'type3': ['o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19'], 'type4': ['o20', 'o21', 'o22', 'o23', 'o24', 'o25', 'o26']}

def ResetState():
    state.loc = { 'r0': 19, 'r1': 27, 'r2': 26, 'r3': 8, 'm0': 8, 'fixer0': 13, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK, 'o20': UNK, 'o21': UNK, 'o22': UNK, 'o23': UNK, 'o24': UNK, 'o25': UNK, 'o26': UNK,}
    state.storedLoc = {'o0': 4, 'o1': 12, 'o2': 27, 'o3': 17, 'o4': 11, 'o5': 17, 'o6': 1, 'o7': 9, 'o8': 9, 'o9': 2, 'o10': 4, 'o11': 4, 'o12': 14, 'o13': 8, 'o14': 5, 'o15': 10, 'o16': 14, 'o17': 24, 'o18': 1, 'o19': 9, 'o20': 22, 'o21': 6, 'o22': 6, 'o23': 3, 'o24': 3, 'o25': 6, 'o26': 27}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL,}
    state.busy = {"'r0'": False, "'r1'": False, "'r2'": False, "'r3'": False, "'m0'": False, "'fixer0'": False}
    state.numUses = {'m0': 8, 'fixer0': 8}
    state.var1 = {'temp': 'r1', 'temp1': 'r1'}

tasks = {
    19: [['order', 'type1', 200]],
    18: [['order', 'type1', 200]],
    2: [['order', 'type1', 200]],
    10: [['order', 'type2', 200]],
    21: [['order', 'type2', 200]],
    7: [['order', 'type3', 200]],
    14: [['order', 'type3', 200]],
    9: [['order', 'type3', 200]],
    15: [['order', 'type3', 200]],
    17: [['order', 'type4', 200]],
    4: [['order', 'type4', 200]],
}
eventsEnv = {
}