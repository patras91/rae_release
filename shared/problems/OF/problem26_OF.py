__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(id, r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(id, item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(id, m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(id, r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 16}

rv.GROUND_EDGES = {0: [9, 11, 20, 3, 4, 16, 19], 1: [11, 25, 15, 24, 26], 2: [3, 8, 9], 3: [0, 2], 4: [0, 19, 22, 25, 17, 18, 29], 5: [13, 20], 6: [23, 20, 26, 29], 7: [20, 22, 12, 17, 23, 25, 26, 27], 8: [10, 17, 2], 9: [2, 0, 18], 10: [18, 22, 8], 11: [0, 1, 12, 24, 26], 12: [7, 11, 23, 27, 19], 13: [5, 18, 24], 14: [25], 15: [1, 18, 21], 16: [0, 200, 17, 20], 17: [4, 7, 16, 23, 8, 18], 18: [4, 9, 17, 10, 13, 15, 28], 19: [0, 12, 20, 4], 20: [5, 6, 16, 25, 0, 7, 19, 22], 21: [23, 27, 15, 29], 22: [20, 24, 4, 7, 10, 29], 23: [7, 28, 6, 12, 17, 21], 24: [1, 11, 13, 22], 25: [4, 7, 1, 14, 20], 26: [1, 6, 7, 11, 27, 200], 27: [7, 21, 26, 12], 28: [18, 23], 29: [4, 6, 21, 22], 200: [26, 16]}
rv.GROUND_WEIGHTS = {(0, 9): 11.911740782835944, (0, 11): 3.3874630226422235, (0, 20): 13.859988625952782, (0, 3): 6.844876166047848, (0, 4): 6.7728104558537465, (0, 16): 4.679515674919308, (0, 19): 11.10012468912173, (1, 11): 12.041510609378646, (1, 25): 12.33629828709318, (1, 15): 15.339671267681041, (1, 24): 9.73542504451381, (1, 26): 11.789634560664823, (2, 3): 7.7178358205134945, (2, 8): 6.716459638100229, (2, 9): 12.742071281594454, (4, 19): 7.247228437086068, (4, 22): 11.069700578088549, (4, 25): 1, (4, 17): 9.95238854837476, (4, 18): 4.4966363523877035, (4, 29): 5.49622510605158, (5, 13): 5.210495727488979, (5, 20): 3.9968896996201133, (6, 23): 4.130928843931906, (6, 20): 6.073450725539203, (6, 26): 10.867941891721866, (6, 29): 14.661807247169392, (7, 20): 9.385734961490847, (7, 22): 13.072727989957158, (7, 12): 3.462693371544633, (7, 17): 10.295305668351652, (7, 23): 3.8433694945012844, (7, 25): 5.0785107623297385, (7, 26): 8.970509899755353, (7, 27): 9.080925228869498, (8, 10): 8.090268822406127, (8, 17): 7.928686359831601, (9, 18): 7.127637531961547, (10, 18): 14.711071616118435, (10, 22): 5.608074110216607, (11, 12): 10.362720882405764, (11, 24): 3.399543849253675, (11, 26): 8.426201752524609, (12, 23): 18.300588449295454, (12, 27): 13.451935308449974, (12, 19): 2.8598591685716945, (13, 18): 6.5123233920423935, (13, 24): 9.663982488716272, (14, 25): 3.1382305973055695, (15, 18): 15.900423711519995, (15, 21): 4.80911097177958, (16, 200): 9.630580851158285, (16, 17): 9.47016550752766, (16, 20): 9.669686355991914, (17, 23): 1, (17, 18): 3.509797626964649, (18, 28): 5.011109417072106, (19, 20): 8.166584522420205, (20, 25): 4.538081107822462, (20, 22): 12.199432141805051, (21, 23): 7.954357924353491, (21, 27): 8.354178484656241, (21, 29): 9.049940979932956, (22, 24): 8.385624323191939, (22, 29): 4.394478373953447, (23, 28): 2.5708638097673218, (26, 27): 10.76399358180424, (26, 200): 6.03142646431753}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1,  'r7': rv.FACTORY1,  'r8': rv.FACTORY1,  'r9': rv.FACTORY1,  'r10': rv.FACTORY1,  'r11': rv.FACTORY1,  'r12': rv.FACTORY1,  'r13': rv.FACTORY1,  'r14': rv.FACTORY1,  'r15': rv.FACTORY1,  'r16': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 8.007589942582788, 'r1': 6.513471011150908, 'r2': 9.482927261281537, 'r3': 7.3921020608031505, 'r4': 9.462728364388868, 'r5': 6.3203086440637755, 'r6': 6.910305363959692, 'r7': 6.500002160127012, 'r8': 11.36538177162542, 'r9': 7.741598059898046, 'r10': 9.75930429971567, 'r11': 10.283363727757472, 'r12': 6.302906354002996, 'r13': 4.616397857756489, 'r14': 9.35274241337555, 'r15': 7.57068449402282, 'r16': 10.920877560195926}
rv.MACHINES = { 'm0': rv.FACTORY1, }
rv.REPAIR_BOT = { 'fixer0': rv.FACTORY1,  'fixer1': rv.FACTORY1, }

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18']
rv.OBJ_WEIGHT = {'o0': 8.95124182012578, 'o1': 5.736492856146876, 'o2': 7.219783591820492, 'o3': 6.287699159397764, 'o4': 7.4140587032025005, 'o5': 8.686683262400592, 'o6': 9.031812746745445, 'o7': 11.173269498739703, 'o8': 2.8716090326436623, 'o9': 6.580759896896873, 'o10': 7.500709484229221, 'o11': 6.671785362136711, 'o12': 7.647453533383916, 'o13': 4.898948754767457, 'o14': 6.843080091612016, 'o15': 6.137815030422161, 'o16': 9.420017784937054, 'o17': 8.118807952416008, 'o18': 7.467257088995092}
rv.OBJ_CLASS = {'type0': ['o0'], 'type1': ['o1', 'o2', 'o3', 'o4', 'o5', 'o6'], 'type2': ['o7', 'o8', 'o9', 'o10', 'o11'], 'type3': ['o12'], 'type4': ['o13', 'o14', 'o15', 'o16'], 'type5': ['o17', 'o18']}

def ResetState():
    state.loc = { 'r0': 21, 'r1': 13, 'r2': 0, 'r3': 16, 'r4': 9, 'r5': 18, 'r6': 9, 'r7': 17, 'r8': 2, 'r9': 25, 'r10': 10, 'r11': 25, 'r12': 19, 'r13': 11, 'r14': 20, 'r15': 23, 'r16': 26, 'm0': 6, 'fixer0': 25, 'fixer1': 26, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK,}
    state.storedLoc = {'o0': 9, 'o1': 1, 'o2': 9, 'o3': 0, 'o4': 26, 'o5': 8, 'o6': 19, 'o7': 19, 'o8': 28, 'o9': 13, 'o10': 3, 'o11': 8, 'o12': 13, 'o13': 14, 'o14': 15, 'o15': 9, 'o16': 15, 'o17': 20, 'o18': 2}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL, 'r13': NIL, 'r14': NIL, 'r15': NIL, 'r16': NIL, 'fixer0': False, 'fixer1': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'r12': False, 'r13': False, 'r14': False, 'r15': False, 'r16': False, 'm0': False, 'fixer0': False, 'fixer1': False}
    state.numUses = {'m0': 11}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'redoId': 0}
    state.shouldRedo = {}

tasks = {
    31: [['order', 'type0', 200]],
    15: [['order', 'type1', 200]],
}
eventsEnv = {
}