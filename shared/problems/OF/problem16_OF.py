__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(id, r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(id, item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(id, m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(id, r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(id, r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 5,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 19}

rv.GROUND_EDGES = {0: [2, 12, 14, 23, 26, 1, 3, 4, 5, 7, 15, 21, 28], 1: [0, 9, 13], 2: [5, 16, 20, 0, 10, 18], 3: [0, 11, 9, 17], 4: [0, 7, 8, 22], 5: [0, 2], 6: [24, 29, 8], 7: [0, 21, 4, 13, 17, 22], 8: [6, 16, 4, 10, 17], 9: [1, 3, 10], 10: [2, 8, 9, 15, 26], 11: [13, 15, 19, 23, 24, 29, 3, 27, 200], 12: [0], 13: [1, 7, 22, 23, 11, 14, 24, 29], 14: [13, 0, 20], 15: [0, 10, 11], 16: [24, 28, 2, 8, 27], 17: [3, 7, 8, 29], 18: [2, 19, 27], 19: [18, 23, 11], 20: [14, 27, 2, 23, 25], 21: [0, 7], 22: [4, 7, 24, 13, 26], 23: [19, 20, 28, 0, 11, 13, 24], 24: [13, 23, 29, 6, 11, 16, 22], 25: [20], 26: [22, 28, 29, 0, 10, 200], 27: [11, 16, 18, 29, 20], 28: [0, 16, 23, 26], 29: [6, 13, 11, 17, 24, 26, 27], 200: [11, 26]}
rv.GROUND_WEIGHTS = {(0, 2): 13.155437971266991, (0, 12): 11.500255507936753, (0, 14): 8.22030611060139, (0, 23): 1, (0, 26): 8.133556202996159, (0, 1): 11.273809750159684, (0, 3): 9.432083079679558, (0, 4): 12.724832982452096, (0, 5): 1, (0, 7): 1, (0, 15): 4.332403247030439, (0, 21): 8.676809013400451, (0, 28): 7.485252498298104, (1, 9): 10.136013142949256, (1, 13): 2.4486413071125366, (2, 5): 9.259087719319474, (2, 16): 9.974534777082885, (2, 20): 5.766398156315306, (2, 10): 8.956446967093713, (2, 18): 11.232536260649622, (3, 11): 3.1334102539867734, (3, 9): 9.807516985921357, (3, 17): 11.82375789918395, (4, 7): 6.976113199886038, (4, 8): 16.79025265682312, (4, 22): 3.9734583899143354, (6, 24): 6.597295986734985, (6, 29): 6.206451622247768, (6, 8): 13.291375154552238, (7, 21): 10.182622339946859, (7, 13): 4.57861348936426, (7, 17): 15.590880398021165, (7, 22): 4.253229163474455, (8, 16): 3.7164045253696347, (8, 10): 6.507980696696902, (8, 17): 13.787463610819403, (9, 10): 10.005912061435955, (10, 15): 8.410656547725665, (10, 26): 21.03166219440969, (11, 13): 10.637912373492814, (11, 15): 8.992907897866369, (11, 19): 7.785122861867211, (11, 23): 6.323757253850728, (11, 24): 13.379688434219542, (11, 29): 5.983959687642017, (11, 27): 10.393459153698016, (11, 200): 13.830045165779437, (13, 22): 5.9451080930872235, (13, 23): 7.331928906277026, (13, 14): 12.502675508296468, (13, 24): 14.060053323134355, (13, 29): 3.7722331852605837, (14, 20): 2.664050455289517, (16, 24): 12.059457987476893, (16, 28): 6.727159306907859, (16, 27): 7.798305430732264, (17, 29): 13.12200927356036, (18, 19): 6.19477870929787, (18, 27): 7.482185781787279, (19, 23): 16.652342162650378, (20, 27): 8.111643831163635, (20, 23): 3.9002656389499615, (20, 25): 15.636184869055992, (22, 24): 9.90167230277116, (22, 26): 1.9891471122494346, (23, 28): 16.49673270111667, (23, 24): 7.314229678271877, (24, 29): 10.947249376647662, (26, 28): 9.041413288835965, (26, 29): 8.62893060216162, (26, 200): 6.119801776914505, (27, 29): 9.18390406516494}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1,  'r7': rv.FACTORY1,  'r8': rv.FACTORY1,  'r9': rv.FACTORY1,  'r10': rv.FACTORY1,  'r11': rv.FACTORY1,  'r12': rv.FACTORY1,  'r13': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 4.63296831840857, 'r1': 7.4212939499286845, 'r2': 7.931405082307791, 'r3': 3.747565221800567, 'r4': 4.627504041816286, 'r5': 7.940375032735138, 'r6': 9.280257510538833, 'r7': 10.054970893925617, 'r8': 8.557226155203567, 'r9': 9.133595587703491, 'r10': 4.420914319080779, 'r11': 6.811055794011775, 'r12': 6.431088729623554, 'r13': 5.5553435567967675}
rv.MACHINES = { 'm0': rv.FACTORY1,  'm1': rv.FACTORY1,  'm2': rv.FACTORY1,  'm3': rv.FACTORY1,  'm4': rv.FACTORY1, }
rv.REPAIR_BOT = { 'fixer0': rv.FACTORY1,  'fixer1': rv.FACTORY1,  'fixer2': rv.FACTORY1, }

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21', 'o22', 'o23']
rv.OBJ_WEIGHT = {'o0': 4.791024593012521, 'o1': 6.595459153829122, 'o2': 5.99932555169189, 'o3': 9.845981271747407, 'o4': 3.923242311909115, 'o5': 4.8450997467415835, 'o6': 5.819246784795089, 'o7': 4.60267566306837, 'o8': 7.012429127205729, 'o9': 8.10280760580077, 'o10': 6.8258307158594125, 'o11': 7.896905820398968, 'o12': 6.567985044454396, 'o13': 10.054970893925617, 'o14': 7.131623861973987, 'o15': 8.184557848942505, 'o16': 9.478367631640554, 'o17': 2.943796850751907, 'o18': 8.358763056838576, 'o19': 10.054970893925617, 'o20': 7.289059861766823, 'o21': 6.893103942690549, 'o22': 8.29153475122497, 'o23': 5.371803672757732}
rv.OBJ_CLASS = {'type0': ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6'], 'type1': ['o7', 'o8', 'o9', 'o10', 'o11', 'o12'], 'type2': ['o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19'], 'type3': ['o20', 'o21', 'o22', 'o23']}

def ResetState():
    state.loc = { 'r0': 8, 'r1': 13, 'r2': 18, 'r3': 17, 'r4': 25, 'r5': 9, 'r6': 1, 'r7': 4, 'r8': 20, 'r9': 27, 'r10': 29, 'r11': 16, 'r12': 20, 'r13': 29, 'm0': 4, 'm1': 7, 'm2': 18, 'm3': 24, 'm4': 19, 'fixer0': 9, 'fixer1': 7, 'fixer2': 3, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK, 'o20': UNK, 'o21': UNK, 'o22': UNK, 'o23': UNK,}
    state.storedLoc = {'o0': 20, 'o1': 15, 'o2': 16, 'o3': 11, 'o4': 16, 'o5': 28, 'o6': 2, 'o7': 13, 'o8': 5, 'o9': 5, 'o10': 17, 'o11': 4, 'o12': 2, 'o13': 29, 'o14': 22, 'o15': 7, 'o16': 7, 'o17': 8, 'o18': 4, 'o19': 25, 'o20': 14, 'o21': 28, 'o22': 5, 'o23': 1}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'r7': NIL, 'r8': NIL, 'r9': NIL, 'r10': NIL, 'r11': NIL, 'r12': NIL, 'r13': NIL, 'fixer0': False, 'fixer1': False, 'fixer2': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'r7': False, 'r8': False, 'r9': False, 'r10': False, 'r11': False, 'r12': False, 'r13': False, 'm0': False, 'm1': False, 'm2': False, 'm3': False, 'm4': False, 'fixer0': False, 'fixer1': False, 'fixer2': False}
    state.numUses = {'m0': 6, 'm1': 9, 'm2': 7, 'm3': 5, 'm4': 11}
    state.var1 = {'temp': 'r0', 'temp1': 'r0', 'temp2': 1, 'redoId': 0}
    state.shouldRedo = {}

tasks = {
    9: [['order', 'type0', 200]],
    22: [['order', 'type0', 200]],
}
eventsEnv = {
}