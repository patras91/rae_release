__author__ = 'mason'
from domain_orderFulfillment import *
from timer import DURATION
from state import state
import numpy as np

def GetCostOfMove(r, loc1, loc2, dist):
    return 1 + dist

def GetCostOfLookup(item):
    return max(1, np.random.beta(2, 2))

def GetCostOfWrap(m, item):
    return max(1, np.random.normal(5, .5))

def GetCostOfPickup(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfPutdown(r, item):
    return max(1, np.random.normal(4, 1))

def GetCostOfLoad(r, m, item):
    return max(1, np.random.normal(3, .5))

DURATION.TIME = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

DURATION.COUNTER = {
    'lookupDB': GetCostOfLookup,
    'wrap': GetCostOfWrap,
    'pickup': GetCostOfPickup,
    'putdown': GetCostOfPutdown,
    'acquireRobot': 1,
    'freeRobot': 1,
    'loadMachine': GetCostOfLoad,
    'moveRobot': GetCostOfMove,
    'repair': 8,
    'wait': 1
}

rv.LOCATIONS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 200]
rv.FACTORY1 = frozenset({0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23})
rv.FACTORY_UNION = rv.FACTORY1
rv.SHIPPING_DOC = {rv.FACTORY1: 0}

rv.GROUND_EDGES = {0: [13, 14, 5, 7, 17, 19], 1: [2, 8, 18, 23], 2: [3, 10, 17, 1, 20], 3: [23, 2, 22], 4: [6, 18, 22, 5, 10, 16, 17, 21], 5: [0, 4, 15, 23, 8, 9], 6: [10, 12, 23, 4, 17], 7: [0, 8, 18, 23], 8: [1, 5, 7, 9, 14, 17], 9: [5, 8, 12, 23, 22], 10: [4, 2, 6, 200], 11: [18], 12: [16, 17, 6, 9, 13], 13: [12, 22, 23, 0, 17, 20], 14: [8, 16, 0, 23], 15: [22, 5], 16: [4, 12, 14], 17: [0, 4, 6, 8, 13, 2, 12, 21, 200], 18: [1, 7, 20, 4, 11], 19: [0], 20: [2, 13, 18], 21: [4, 17], 22: [3, 9, 4, 13, 15], 23: [1, 6, 7, 14, 3, 5, 9, 13], 200: [10, 17]}
rv.GROUND_WEIGHTS = {(0, 13): 10.06857629399751, (0, 14): 5.009954766247452, (0, 5): 11.563633784681114, (0, 7): 11.818036329269182, (0, 17): 9.387017995232114, (0, 19): 4.721955447884305, (1, 2): 4.195066267367474, (1, 8): 16.47502339382651, (1, 18): 5.4590875857623296, (1, 23): 8.5650186924046, (2, 3): 6.370884155989757, (2, 10): 8.564271537909102, (2, 17): 8.894580217995957, (2, 20): 7.6630427459590225, (3, 23): 5.015954639353335, (3, 22): 9.094292808222807, (4, 6): 6.999146217336355, (4, 18): 5.4507847567187335, (4, 22): 2.8706445301387964, (4, 5): 2.3734607083464603, (4, 10): 5.7034534641087635, (4, 16): 8.282374599379324, (4, 17): 3.1272582486101896, (4, 21): 5.943296992920399, (5, 15): 13.38266161453343, (5, 23): 2.19295526780284, (5, 8): 5.269010591410357, (5, 9): 5.995611926094634, (6, 10): 6.92141736186642, (6, 12): 13.265139149672656, (6, 23): 8.71913321250879, (6, 17): 2.201484259520666, (7, 8): 8.692911547212246, (7, 18): 14.567659692191098, (7, 23): 2.650615626591506, (8, 9): 4.564455429488394, (8, 14): 4.387300925803901, (8, 17): 9.113109908554858, (9, 12): 5.586188701543018, (9, 23): 4.263929497529873, (9, 22): 3.518425442477376, (10, 200): 10.84838259693349, (11, 18): 6.596245784920634, (12, 16): 6.231732434555488, (12, 17): 7.112319189154174, (12, 13): 6.8887696732685555, (13, 22): 16.688686636894552, (13, 23): 4.905939601510323, (13, 17): 7.974540240036539, (13, 20): 8.350651617325134, (14, 16): 8.383961655073167, (14, 23): 1, (15, 22): 4.944777870454245, (17, 21): 13.32824277244792, (17, 200): 5.297371431075227, (18, 20): 8.819793708880681}

rv.ROBOTS = { 'r0': rv.FACTORY1,  'r1': rv.FACTORY1,  'r2': rv.FACTORY1,  'r3': rv.FACTORY1,  'r4': rv.FACTORY1,  'r5': rv.FACTORY1,  'r6': rv.FACTORY1, }
rv.ROBOT_CAPACITY = {'r0': 4.585185213323491, 'r1': 8.277245277433469, 'r2': 8.741906664056696, 'r3': 6.611060169483148, 'r4': 6.127127060421739, 'r5': 9.21893417115566, 'r6': 8.094388811008297}
rv.MACHINES = { 'm0': rv.FACTORY1, }
rv.REPAIR_BOT = ['fixer0', 'fixer1']

rv.OBJECTS = ['o0', 'o1', 'o2', 'o3', 'o4', 'o5', 'o6', 'o7', 'o8', 'o9', 'o10', 'o11', 'o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18', 'o19', 'o20', 'o21', 'o22']
rv.OBJ_WEIGHT = {'o0': 7.063699574440115, 'o1': 3.134632153175851, 'o2': 6.329499285589011, 'o3': 4.278831575781847, 'o4': 5.724020682793567, 'o5': 6.293573975011219, 'o6': 5.961230236154534, 'o7': 6.948642522966589, 'o8': 8.219213395739015, 'o9': 4.702991081376281, 'o10': 8.709535714100802, 'o11': 4.049111481060397, 'o12': 6.322090609078169, 'o13': 7.3704436592044935, 'o14': 8.869359607406038, 'o15': 6.865887345158642, 'o16': 9.21893417115566, 'o17': 5.973453504174863, 'o18': 6.736121808303416, 'o19': 9.009173767018385, 'o20': 4.550264087178481, 'o21': 7.663552471805106, 'o22': 9.21893417115566}
rv.OBJ_CLASS = {'type0': ['o0', 'o1'], 'type1': ['o2', 'o3', 'o4', 'o5'], 'type2': ['o6', 'o7', 'o8', 'o9', 'o10', 'o11'], 'type3': ['o12', 'o13', 'o14', 'o15', 'o16', 'o17', 'o18'], 'type4': ['o19', 'o20', 'o21', 'o22']}

def ResetState():
    state.loc = { 'r0': 11, 'r1': 7, 'r2': 22, 'r3': 1, 'r4': 0, 'r5': 10, 'r6': 8, 'm0': 22, 'fixer0': 23, 'fixer1': 16, 'o0': UNK, 'o1': UNK, 'o2': UNK, 'o3': UNK, 'o4': UNK, 'o5': UNK, 'o6': UNK, 'o7': UNK, 'o8': UNK, 'o9': UNK, 'o10': UNK, 'o11': UNK, 'o12': UNK, 'o13': UNK, 'o14': UNK, 'o15': UNK, 'o16': UNK, 'o17': UNK, 'o18': UNK, 'o19': UNK, 'o20': UNK, 'o21': UNK, 'o22': UNK,}
    state.storedLoc = {'o0': 14, 'o1': 2, 'o2': 11, 'o3': 15, 'o4': 1, 'o5': 8, 'o6': 6, 'o7': 21, 'o8': 3, 'o9': 8, 'o10': 2, 'o11': 0, 'o12': 0, 'o13': 12, 'o14': 23, 'o15': 1, 'o16': 9, 'o17': 12, 'o18': 0, 'o19': 11, 'o20': 22, 'o21': 3, 'o22': 12}
    state.load = { 'r0': NIL, 'r1': NIL, 'r2': NIL, 'r3': NIL, 'r4': NIL, 'r5': NIL, 'r6': NIL, 'fixer0': False, 'fixer1': False,}
    state.busy = {'r0': False, 'r1': False, 'r2': False, 'r3': False, 'r4': False, 'r5': False, 'r6': False, 'm0': False, 'fixer0': False, 'fixer1': False}
    state.numUses = {'m0': 9}
    state.var1 = {'temp': 'r1', 'temp1': 'r1'}

tasks = {
    3: [['order', 'type0', 200]],
    18: [['order', 'type1', 200]],
    11: [['order', 'type1', 200]],
    20: [['order', 'type3', 200]],
    10: [['order', 'type3', 200]],
    4: [['order', 'type3', 200]],
    17: [['order', 'type3', 200]],
    14: [['order', 'type3', 200]],
    2: [['order', 'type3', 200]],
    5: [['order', 'type4', 200]],
    6: [['order', 'type4', 200]],
    21: [['order', 'type4', 200]],
    15: [['order', 'type4', 200]],
}
eventsEnv = {
}